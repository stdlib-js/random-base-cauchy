// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.2.0-esm/index.mjs";import{factory as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.2.0-esm/index.mjs";import{isPrimitive as g}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.2.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.2.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-tan@v0.2.0-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pi@v0.2.0-esm/index.mjs";function v(t,e){return!u(t)||h(t)?new TypeError(p("invalid argument. First argument must be a number and not NaN. Value: `%s`.",t)):g(e)?null:new TypeError(p("invalid argument. Second argument must be a positive number. Value: `%s`.",e))}function c(t,e,n){return e+n*j(f*(t()-.5))}function b(){var u,g,h,j,f,b,x;if(0===arguments.length)g=a();else if(1===arguments.length){if(!s(h=arguments[0]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",h));if(i(h,"prng")){if(!r(h.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));g=a({prng:h.prng})}else g=a(h)}else{if(b=v(x=arguments[0],u=arguments[1]))throw b;if(arguments.length>2){if(!s(h=arguments[2]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",h));if(i(h,"prng")){if(!r(h.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));g=a({prng:h.prng})}else g=a(h)}else g=a()}return f=void 0===x?V:P,j=g.PRNG,t(f,"NAME","cauchy"),h&&h.prng?(t(f,"seed",null),t(f,"seedLength",null),n(f,"state",o(null),m),t(f,"stateLength",null),t(f,"byteLength",null),t(f,"toJSON",o(null))):(e(f,"seed",y),e(f,"seedLength",w),n(f,"state",E,O),e(f,"stateLength",N),e(f,"byteLength",L),t(f,"toJSON",T)),t(f,"PRNG",j),f;function y(){return j.seed}function w(){return j.seedLength}function N(){return j.stateLength}function L(){return j.byteLength}function E(){return j.state}function O(t){j.state=t}function T(){var t={type:"PRNG"};return t.name=f.NAME,t.state=l(j.state),t.params=void 0===x?[]:[x,u],t}function P(){return c(g,x,u)}function V(t,e){return d(t)||d(e)||e<=0?NaN:c(g,t,e)}}var x=b();t(x,"factory",b);export{x as default,b as factory};
//# sourceMappingURL=index.mjs.map
