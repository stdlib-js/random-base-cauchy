// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-tan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pi@esm/index.mjs";var c=u.isPrimitive,b=h.isPrimitive,v=j;var x=function(t,e){return!c(t)||v(t)?new TypeError("invalid argument. `x0` must be a number primitive and not `NaN`. Value: `"+t+"`."):b(e)?null:new TypeError("invalid argument. `gamma` must be a positive number. Value: `"+e+"`.")},y=g,w=f;var N=function(t,e,n){return e+n*y(w*(t()-.5))},L=t,E=e,O=n,T=s,P=r,V=i,G=o,R=m,A=d,J=a.factory,M=l,S=p,z=x,k=N;var q=function(){var t,e,n,s,r,i,o;if(0===arguments.length)e=J();else if(1===arguments.length){if(!T(n=arguments[0]))throw new TypeError(S("invalid argument. Options argument must be an object. Value: `%s`.",n));if(V(n,"prng")){if(!P(n.prng))throw new TypeError(S("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",n.prng));e=J({prng:n.prng})}else e=J(n)}else{if(i=z(o=arguments[0],t=arguments[1]))throw i;if(arguments.length>2){if(!T(n=arguments[2]))throw new TypeError(S("invalid argument. Options argument must be an object. Value: `%s`.",n));if(V(n,"prng")){if(!P(n.prng))throw new TypeError(S("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",n.prng));e=J({prng:n.prng})}else e=J(n)}else e=J()}return r=void 0===o?g:j,s=e.PRNG,L(r,"NAME","cauchy"),n&&n.prng?(L(r,"seed",null),L(r,"seedLength",null),O(r,"state",G(null),R),L(r,"stateLength",null),L(r,"byteLength",null),L(r,"toJSON",G(null))):(E(r,"seed",m),E(r,"seedLength",d),O(r,"state",p,u),E(r,"stateLength",a),E(r,"byteLength",l),L(r,"toJSON",h)),L(r,"PRNG",s),r;function m(){return s.seed}function d(){return s.seedLength}function a(){return s.stateLength}function l(){return s.byteLength}function p(){return s.state}function u(t){s.state=t}function h(){var e={type:"PRNG"};return e.name=r.NAME,e.state=M(s.state),e.params=void 0===o?[]:[o,t],e}function j(){return k(e,o,t)}function g(t,n){return A(t)||A(n)||n<=0?NaN:k(e,t,n)}},B=q(),C=q;t(B,"factory",C);var D=B;export{D as default,C as factory};
//# sourceMappingURL=index.mjs.map
