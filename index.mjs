// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-tan@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pi@esm/index.mjs";var f=p.isPrimitive,c=u.isPrimitive,b=h;var v=function(e,t){return!f(e)||b(e)?new TypeError("invalid argument. `x0` must be a number primitive and not `NaN`. Value: `"+e+"`."):c(t)?null:new TypeError("invalid argument. `gamma` must be a positive number. Value: `"+t+"`.")},x=g,y=j;var w=function(e,t,n){return t+n*x(y*(e()-.5))},N=e,L=t,E=n,O=s,T=r,P=i,V=o,G=m,R=d,A=a.factory,J=l,M=v,S=w;var z=function(){var e,t,n,s,r,i,o;if(0===arguments.length)t=A();else if(1===arguments.length){if(!O(n=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+n+"`.");if(P(n,"prng")){if(!T(n.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+n.prng+"`.");t=A({prng:n.prng})}else t=A(n)}else{if(i=M(o=arguments[0],e=arguments[1]))throw i;if(arguments.length>2){if(!O(n=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+n+"`.");if(P(n,"prng")){if(!T(n.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+n.prng+"`.");t=A({prng:n.prng})}else t=A(n)}else t=A()}return r=void 0===o?j:g,s=t.PRNG,N(r,"NAME","cauchy"),n&&n.prng?(N(r,"seed",null),N(r,"seedLength",null),E(r,"state",V(null),G),N(r,"stateLength",null),N(r,"byteLength",null),N(r,"toJSON",V(null))):(L(r,"seed",m),L(r,"seedLength",d),E(r,"state",p,u),L(r,"stateLength",a),L(r,"byteLength",l),N(r,"toJSON",h)),N(r,"PRNG",s),r;function m(){return s.seed}function d(){return s.seedLength}function a(){return s.stateLength}function l(){return s.byteLength}function p(){return s.state}function u(e){s.state=e}function h(){var t={type:"PRNG"};return t.name=r.NAME,t.state=J(s.state),t.params=void 0===o?[]:[o,e],t}function g(){return S(t,o,e)}function j(e,n){return R(e)||R(n)||n<=0?NaN:S(t,e,n)}},k=z(),q=z;e(k,"factory",q);var B=k;export{B as default,q as factory};
//# sourceMappingURL=index.mjs.map
