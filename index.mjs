// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-tan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pi@esm/index.mjs";var c=u.isPrimitive,b=h.isPrimitive,v=p,x=j;var y=function(t,e){return!c(t)||x(t)?new TypeError(v("invalid argument. `%s` must be a number and not `NaN`. Value: `%s`.","x0",t)):b(e)?null:new TypeError(v("invalid argument. `%s` must be a positive number. Value: `%s`.","gamma",e))},w=g,N=f;var L=function(t,e,n){return e+n*w(N*(t()-.5))},E=t,O=e,T=n,P=s,V=r,G=i,R=o,A=m,J=d,M=a.factory,S=l,z=p,k=y,q=L;var B=function(){var t,e,n,s,r,i,o;if(0===arguments.length)e=M();else if(1===arguments.length){if(!P(n=arguments[0]))throw new TypeError(z("invalid argument. Options argument must be an object. Value: `%s`.",n));if(G(n,"prng")){if(!V(n.prng))throw new TypeError(z("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",n.prng));e=M({prng:n.prng})}else e=M(n)}else{if(i=k(o=arguments[0],t=arguments[1]))throw i;if(arguments.length>2){if(!P(n=arguments[2]))throw new TypeError(z("invalid argument. Options argument must be an object. Value: `%s`.",n));if(G(n,"prng")){if(!V(n.prng))throw new TypeError(z("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",n.prng));e=M({prng:n.prng})}else e=M(n)}else e=M()}return r=void 0===o?g:j,s=e.PRNG,E(r,"NAME","cauchy"),n&&n.prng?(E(r,"seed",null),E(r,"seedLength",null),T(r,"state",R(null),A),E(r,"stateLength",null),E(r,"byteLength",null),E(r,"toJSON",R(null))):(O(r,"seed",m),O(r,"seedLength",d),T(r,"state",p,u),O(r,"stateLength",a),O(r,"byteLength",l),E(r,"toJSON",h)),E(r,"PRNG",s),r;function m(){return s.seed}function d(){return s.seedLength}function a(){return s.stateLength}function l(){return s.byteLength}function p(){return s.state}function u(t){s.state=t}function h(){var e={type:"PRNG"};return e.name=r.NAME,e.state=S(s.state),e.params=void 0===o?[]:[o,t],e}function j(){return q(e,o,t)}function g(t,n){return J(t)||J(n)||n<=0?NaN:q(e,t,n)}},C=B(),D=B;t(C,"factory",D);var F=C;export{F as default,D as factory};
//# sourceMappingURL=index.mjs.map
